@page "/createEmployee"
@using Blazorise.Components
@using JobsUI.Dtos
@using Blazorise
@using JobsUI.Service
@inject EmployeeServiceUI _employeeServiceUI;
@inject LevelServiceUI _levelServiceUI;
@inject JobServiceUI _jobServiceUI;
@inject NavigationManager _navigationManager

<Div>
    <Field>
        <Label>FirstName</Label>
        <TextEdit @bind-Value="EmployeeDtos.FirstName"/>
    </Field>
    <Field>
        <Label>LastName</Label>
        <TextEdit @bind-Value="EmployeeDtos.LastName" />
    </Field>
    <Field>
        <Label>Age</Label>
        <TextEdit @bind-Value="EmployeeDtos.Age" />
    </Field>
    <Field>
        <Label>AddRess</Label>
        <TextEdit @bind-Value="EmployeeDtos.Address" />
    </Field>
    <Field>
        <Label>PhoneNumber</Label>
        <TextEdit @bind-Value="EmployeeDtos.PhoneNumber" />
    </Field>
    <Autocomplete TItem="LevelDtos"
                  TValue="string" 
                  Data="levelList"
                  TextField="@(( item ) => item.Levels)"
                  ValueField="@(( item ) => item.Code)"
                  @bind-SelectedValue="@selectedSearchLevel"
                  @bind-SelectedText="selectedLevelText"
                  Placeholder="Search Level ..."
                  Filter="AutocompleteFilter.StartsWith"
                  FreeTyping
                  CustomFilter="@(( item, searchValue ) => item.Levels.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
        <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
    </Autocomplete>
    <Autocomplete TItem="JobsDtos"
                  TValue="string"
                  Data="jobList"
                  TextField="@(( item ) => item.CompanyName)"
                  ValueField="@(( item ) => item.Direction)"
                  @bind-SelectedValue="@selectedSearchJob"
                  @bind-SelectedText="selectedJobText"
                  Placeholder="Search Jobs ..."
                  Filter="AutocompleteFilter.StartsWith"
                  FreeTyping
                  CustomFilter="@(( item, searchValue ) => item.CompanyName.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
        <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
    </Autocomplete>
</Div>

@code {
    private EmployeeDtos EmployeeDtos { get; set; }
    private IEnumerable<LevelDtos> levelList { get; set; }
    private IEnumerable<JobsDtos> jobList { get; set; }
    private string selectedSearchLevel { get; set; }
    private string selectedLevelText { get; set; }
    private string selectedSearchJob { get; set; }
    private string selectedJobText { get; set; }
    public async Task OnSave()
    {
        try
        {
            if(EmployeeDtos is not null)
            {
                var result = await _employeeServiceUI.CreateEmployee(EmployeeDtos);   
            }   
        }
        catch (Exception ex)
        {
            throw new Exception("Sorry Don`t Save Employee");
        }
    }
    public async Task GetAllLevel()
    {
        try
        {
            levelList = await _levelServiceUI.GetAllLevel();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw ex;
        }
    }
    public async Task GetAllCompany()
    {
        try
        {
            jobList = await _jobServiceUI.GetAllJob();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            throw ex;
        }
    }
}